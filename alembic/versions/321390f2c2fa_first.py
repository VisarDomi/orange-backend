"""first

Revision ID: 321390f2c2fa
Revises: 
Create Date: 2019-06-05 23:00:35.804437

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '321390f2c2fa'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('itinerarymasters',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('departure', sa.String(), nullable=True),
    sa.Column('destination', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stops',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('pickup', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.Column('register_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('token')
    )
    op.create_table('admins',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('companys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('payment_frequency', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drivers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companys.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itinerarys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('departure', sa.String(), nullable=True),
    sa.Column('destination', sa.String(), nullable=True),
    sa.Column('price', sa.String(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reservations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('destination', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('time', sa.String(), nullable=True),
    sa.Column('big_luggage', sa.String(), nullable=True),
    sa.Column('small_luggage', sa.String(), nullable=True),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companys.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_stop',
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('stop_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['stop_id'], ['stops.id'], )
    )
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ref', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('due', sa.Date(), nullable=True),
    sa.Column('from_business_name', sa.String(), nullable=True),
    sa.Column('from_addressline_1', sa.String(), nullable=True),
    sa.Column('from_addressline_2', sa.String(), nullable=True),
    sa.Column('from_city', sa.String(), nullable=True),
    sa.Column('from_postcode', sa.String(), nullable=True),
    sa.Column('from_vat', sa.String(), nullable=True),
    sa.Column('from_phone', sa.String(), nullable=True),
    sa.Column('to_client_name', sa.String(), nullable=True),
    sa.Column('to_addressline_1', sa.String(), nullable=True),
    sa.Column('to_addressline_2', sa.String(), nullable=True),
    sa.Column('to_city', sa.String(), nullable=True),
    sa.Column('to_postcode', sa.String(), nullable=True),
    sa.Column('to_vat', sa.String(), nullable=True),
    sa.Column('to_phone', sa.String(), nullable=True),
    sa.Column('payment_account_name', sa.String(), nullable=True),
    sa.Column('payment_account_sortcode', sa.String(), nullable=True),
    sa.Column('payment_account_number', sa.String(), nullable=True),
    sa.Column('invoice_notes', sa.Text(), nullable=True),
    sa.Column('discount', sa.String(), nullable=True),
    sa.Column('sub_total', sa.String(), nullable=True),
    sa.Column('tax', sa.String(), nullable=True),
    sa.Column('grand_total', sa.String(), nullable=True),
    sa.Column('reservation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reservation_stop',
    sa.Column('reservation_id', sa.Integer(), nullable=True),
    sa.Column('stop_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], ),
    sa.ForeignKeyConstraint(['stop_id'], ['stops.id'], )
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('quantity', sa.String(), nullable=True),
    sa.Column('price', sa.String(), nullable=True),
    sa.Column('discount', sa.String(), nullable=True),
    sa.Column('tax', sa.String(), nullable=True),
    sa.Column('total', sa.String(), nullable=True),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('items')
    op.drop_table('reservation_stop')
    op.drop_table('invoices')
    op.drop_table('employee_stop')
    op.drop_table('reservations')
    op.drop_table('itinerarys')
    op.drop_table('employees')
    op.drop_table('drivers')
    op.drop_table('companys')
    op.drop_table('admins')
    op.drop_table('users')
    op.drop_table('stops')
    op.drop_table('itinerarymasters')
    # ### end Alembic commands ###
